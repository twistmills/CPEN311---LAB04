// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.1.2 Build 203 01/18/2017 SJ Lite Edition"

// DATE "06/12/2024 15:48:16"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module shared_s_access (
	clk,
	source,
	s_address,
	s_data,
	s_wren,
	s_q,
	init_address,
	init_data,
	shuffle_address,
	shuffle_data,
	shuffle_wren,
	shuffle_q,
	decode_address,
	decode_q);
input 	clk;
input 	[1:0] source;
output 	[7:0] s_address;
output 	[7:0] s_data;
output 	s_wren;
input 	[7:0] s_q;
input 	[7:0] init_address;
input 	[7:0] init_data;
input 	[7:0] shuffle_address;
input 	[7:0] shuffle_data;
input 	shuffle_wren;
output 	[7:0] shuffle_q;
input 	[7:0] decode_address;
output 	[7:0] decode_q;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~input_o ;
wire \s_address[0]~output_o ;
wire \s_address[1]~output_o ;
wire \s_address[2]~output_o ;
wire \s_address[3]~output_o ;
wire \s_address[4]~output_o ;
wire \s_address[5]~output_o ;
wire \s_address[6]~output_o ;
wire \s_address[7]~output_o ;
wire \s_data[0]~output_o ;
wire \s_data[1]~output_o ;
wire \s_data[2]~output_o ;
wire \s_data[3]~output_o ;
wire \s_data[4]~output_o ;
wire \s_data[5]~output_o ;
wire \s_data[6]~output_o ;
wire \s_data[7]~output_o ;
wire \s_wren~output_o ;
wire \shuffle_q[0]~output_o ;
wire \shuffle_q[1]~output_o ;
wire \shuffle_q[2]~output_o ;
wire \shuffle_q[3]~output_o ;
wire \shuffle_q[4]~output_o ;
wire \shuffle_q[5]~output_o ;
wire \shuffle_q[6]~output_o ;
wire \shuffle_q[7]~output_o ;
wire \decode_q[0]~output_o ;
wire \decode_q[1]~output_o ;
wire \decode_q[2]~output_o ;
wire \decode_q[3]~output_o ;
wire \decode_q[4]~output_o ;
wire \decode_q[5]~output_o ;
wire \decode_q[6]~output_o ;
wire \decode_q[7]~output_o ;
wire \decode_address[0]~input_o ;
wire \source[0]~input_o ;
wire \source[1]~input_o ;
wire \shuffle_address[0]~input_o ;
wire \init_address[0]~input_o ;
wire \Mux15~0_combout ;
wire \decode_address[1]~input_o ;
wire \shuffle_address[1]~input_o ;
wire \init_address[1]~input_o ;
wire \Mux14~0_combout ;
wire \decode_address[2]~input_o ;
wire \shuffle_address[2]~input_o ;
wire \init_address[2]~input_o ;
wire \Mux13~0_combout ;
wire \decode_address[3]~input_o ;
wire \shuffle_address[3]~input_o ;
wire \init_address[3]~input_o ;
wire \Mux12~0_combout ;
wire \decode_address[4]~input_o ;
wire \shuffle_address[4]~input_o ;
wire \init_address[4]~input_o ;
wire \Mux11~0_combout ;
wire \decode_address[5]~input_o ;
wire \shuffle_address[5]~input_o ;
wire \init_address[5]~input_o ;
wire \Mux10~0_combout ;
wire \decode_address[6]~input_o ;
wire \shuffle_address[6]~input_o ;
wire \init_address[6]~input_o ;
wire \Mux9~0_combout ;
wire \decode_address[7]~input_o ;
wire \shuffle_address[7]~input_o ;
wire \init_address[7]~input_o ;
wire \Mux8~0_combout ;
wire \shuffle_data[0]~input_o ;
wire \init_data[0]~input_o ;
wire \Mux7~0_combout ;
wire \shuffle_data[1]~input_o ;
wire \init_data[1]~input_o ;
wire \Mux6~0_combout ;
wire \shuffle_data[2]~input_o ;
wire \init_data[2]~input_o ;
wire \Mux5~0_combout ;
wire \shuffle_data[3]~input_o ;
wire \init_data[3]~input_o ;
wire \Mux4~0_combout ;
wire \shuffle_data[4]~input_o ;
wire \init_data[4]~input_o ;
wire \Mux3~0_combout ;
wire \shuffle_data[5]~input_o ;
wire \init_data[5]~input_o ;
wire \Mux2~0_combout ;
wire \shuffle_data[6]~input_o ;
wire \init_data[6]~input_o ;
wire \Mux1~0_combout ;
wire \shuffle_data[7]~input_o ;
wire \init_data[7]~input_o ;
wire \Mux0~0_combout ;
wire \shuffle_wren~input_o ;
wire \Mux16~0_combout ;
wire \s_q[0]~input_o ;
wire \s_q[1]~input_o ;
wire \s_q[2]~input_o ;
wire \s_q[3]~input_o ;
wire \s_q[4]~input_o ;
wire \s_q[5]~input_o ;
wire \s_q[6]~input_o ;
wire \s_q[7]~input_o ;


cyclonev_io_obuf \s_address[0]~output (
	.i(\Mux15~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[0]~output .bus_hold = "false";
defparam \s_address[0]~output .open_drain_output = "false";
defparam \s_address[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[1]~output (
	.i(\Mux14~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[1]~output .bus_hold = "false";
defparam \s_address[1]~output .open_drain_output = "false";
defparam \s_address[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[2]~output (
	.i(\Mux13~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[2]~output .bus_hold = "false";
defparam \s_address[2]~output .open_drain_output = "false";
defparam \s_address[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[3]~output (
	.i(\Mux12~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[3]~output .bus_hold = "false";
defparam \s_address[3]~output .open_drain_output = "false";
defparam \s_address[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[4]~output (
	.i(\Mux11~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[4]~output .bus_hold = "false";
defparam \s_address[4]~output .open_drain_output = "false";
defparam \s_address[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[5]~output (
	.i(\Mux10~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[5]~output .bus_hold = "false";
defparam \s_address[5]~output .open_drain_output = "false";
defparam \s_address[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[6]~output (
	.i(\Mux9~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[6]~output .bus_hold = "false";
defparam \s_address[6]~output .open_drain_output = "false";
defparam \s_address[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_address[7]~output (
	.i(\Mux8~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_address[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_address[7]~output .bus_hold = "false";
defparam \s_address[7]~output .open_drain_output = "false";
defparam \s_address[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[0]~output (
	.i(\Mux7~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[0]~output .bus_hold = "false";
defparam \s_data[0]~output .open_drain_output = "false";
defparam \s_data[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[1]~output (
	.i(\Mux6~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[1]~output .bus_hold = "false";
defparam \s_data[1]~output .open_drain_output = "false";
defparam \s_data[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[2]~output (
	.i(\Mux5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[2]~output .bus_hold = "false";
defparam \s_data[2]~output .open_drain_output = "false";
defparam \s_data[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[3]~output (
	.i(\Mux4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[3]~output .bus_hold = "false";
defparam \s_data[3]~output .open_drain_output = "false";
defparam \s_data[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[4]~output (
	.i(\Mux3~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[4]~output .bus_hold = "false";
defparam \s_data[4]~output .open_drain_output = "false";
defparam \s_data[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[5]~output (
	.i(\Mux2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[5]~output .bus_hold = "false";
defparam \s_data[5]~output .open_drain_output = "false";
defparam \s_data[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[6]~output (
	.i(\Mux1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[6]~output .bus_hold = "false";
defparam \s_data[6]~output .open_drain_output = "false";
defparam \s_data[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_data[7]~output (
	.i(\Mux0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_data[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \s_data[7]~output .bus_hold = "false";
defparam \s_data[7]~output .open_drain_output = "false";
defparam \s_data[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s_wren~output (
	.i(!\Mux16~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_wren~output_o ),
	.obar());
// synopsys translate_off
defparam \s_wren~output .bus_hold = "false";
defparam \s_wren~output .open_drain_output = "false";
defparam \s_wren~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[0]~output (
	.i(\s_q[0]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[0]~output .bus_hold = "false";
defparam \shuffle_q[0]~output .open_drain_output = "false";
defparam \shuffle_q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[1]~output (
	.i(\s_q[1]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[1]~output .bus_hold = "false";
defparam \shuffle_q[1]~output .open_drain_output = "false";
defparam \shuffle_q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[2]~output (
	.i(\s_q[2]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[2]~output .bus_hold = "false";
defparam \shuffle_q[2]~output .open_drain_output = "false";
defparam \shuffle_q[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[3]~output (
	.i(\s_q[3]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[3]~output .bus_hold = "false";
defparam \shuffle_q[3]~output .open_drain_output = "false";
defparam \shuffle_q[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[4]~output (
	.i(\s_q[4]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[4]~output .bus_hold = "false";
defparam \shuffle_q[4]~output .open_drain_output = "false";
defparam \shuffle_q[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[5]~output (
	.i(\s_q[5]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[5]~output .bus_hold = "false";
defparam \shuffle_q[5]~output .open_drain_output = "false";
defparam \shuffle_q[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[6]~output (
	.i(\s_q[6]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[6]~output .bus_hold = "false";
defparam \shuffle_q[6]~output .open_drain_output = "false";
defparam \shuffle_q[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \shuffle_q[7]~output (
	.i(\s_q[7]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\shuffle_q[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \shuffle_q[7]~output .bus_hold = "false";
defparam \shuffle_q[7]~output .open_drain_output = "false";
defparam \shuffle_q[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[0]~output (
	.i(\s_q[0]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[0]~output .bus_hold = "false";
defparam \decode_q[0]~output .open_drain_output = "false";
defparam \decode_q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[1]~output (
	.i(\s_q[1]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[1]~output .bus_hold = "false";
defparam \decode_q[1]~output .open_drain_output = "false";
defparam \decode_q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[2]~output (
	.i(\s_q[2]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[2]~output .bus_hold = "false";
defparam \decode_q[2]~output .open_drain_output = "false";
defparam \decode_q[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[3]~output (
	.i(\s_q[3]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[3]~output .bus_hold = "false";
defparam \decode_q[3]~output .open_drain_output = "false";
defparam \decode_q[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[4]~output (
	.i(\s_q[4]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[4]~output .bus_hold = "false";
defparam \decode_q[4]~output .open_drain_output = "false";
defparam \decode_q[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[5]~output (
	.i(\s_q[5]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[5]~output .bus_hold = "false";
defparam \decode_q[5]~output .open_drain_output = "false";
defparam \decode_q[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[6]~output (
	.i(\s_q[6]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[6]~output .bus_hold = "false";
defparam \decode_q[6]~output .open_drain_output = "false";
defparam \decode_q[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \decode_q[7]~output (
	.i(\s_q[7]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\decode_q[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \decode_q[7]~output .bus_hold = "false";
defparam \decode_q[7]~output .open_drain_output = "false";
defparam \decode_q[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[0]~input (
	.i(decode_address[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[0]~input_o ));
// synopsys translate_off
defparam \decode_address[0]~input .bus_hold = "false";
defparam \decode_address[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \source[0]~input (
	.i(source[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\source[0]~input_o ));
// synopsys translate_off
defparam \source[0]~input .bus_hold = "false";
defparam \source[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \source[1]~input (
	.i(source[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\source[1]~input_o ));
// synopsys translate_off
defparam \source[1]~input .bus_hold = "false";
defparam \source[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[0]~input (
	.i(shuffle_address[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[0]~input_o ));
// synopsys translate_off
defparam \shuffle_address[0]~input .bus_hold = "false";
defparam \shuffle_address[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[0]~input (
	.i(init_address[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[0]~input_o ));
// synopsys translate_off
defparam \init_address[0]~input .bus_hold = "false";
defparam \init_address[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux15~0 (
// Equation(s):
// \Mux15~0_combout  = ( \init_address[0]~input_o  & ( (!\source[0]~input_o  & (((\source[1]~input_o  & \shuffle_address[0]~input_o )))) # (\source[0]~input_o  & (((!\source[1]~input_o )) # (\decode_address[0]~input_o ))) ) ) # ( !\init_address[0]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[0]~input_o ))) # (\source[0]~input_o  & (\decode_address[0]~input_o )))) ) )

	.dataa(!\decode_address[0]~input_o ),
	.datab(!\source[0]~input_o ),
	.datac(!\source[1]~input_o ),
	.datad(!\shuffle_address[0]~input_o ),
	.datae(!\init_address[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux15~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux15~0 .extended_lut = "off";
defparam \Mux15~0 .lut_mask = 64'h010D313D010D313D;
defparam \Mux15~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[1]~input (
	.i(decode_address[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[1]~input_o ));
// synopsys translate_off
defparam \decode_address[1]~input .bus_hold = "false";
defparam \decode_address[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[1]~input (
	.i(shuffle_address[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[1]~input_o ));
// synopsys translate_off
defparam \shuffle_address[1]~input .bus_hold = "false";
defparam \shuffle_address[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[1]~input (
	.i(init_address[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[1]~input_o ));
// synopsys translate_off
defparam \init_address[1]~input .bus_hold = "false";
defparam \init_address[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux14~0 (
// Equation(s):
// \Mux14~0_combout  = ( \init_address[1]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[1]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[1]~input_o )))) ) ) # ( !\init_address[1]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[1]~input_o ))) # (\source[0]~input_o  & (\decode_address[1]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[1]~input_o ),
	.datad(!\shuffle_address[1]~input_o ),
	.datae(!\init_address[1]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux14~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux14~0 .extended_lut = "off";
defparam \Mux14~0 .lut_mask = 64'h0123456701234567;
defparam \Mux14~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[2]~input (
	.i(decode_address[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[2]~input_o ));
// synopsys translate_off
defparam \decode_address[2]~input .bus_hold = "false";
defparam \decode_address[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[2]~input (
	.i(shuffle_address[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[2]~input_o ));
// synopsys translate_off
defparam \shuffle_address[2]~input .bus_hold = "false";
defparam \shuffle_address[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[2]~input (
	.i(init_address[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[2]~input_o ));
// synopsys translate_off
defparam \init_address[2]~input .bus_hold = "false";
defparam \init_address[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux13~0 (
// Equation(s):
// \Mux13~0_combout  = ( \init_address[2]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[2]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[2]~input_o )))) ) ) # ( !\init_address[2]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[2]~input_o ))) # (\source[0]~input_o  & (\decode_address[2]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[2]~input_o ),
	.datad(!\shuffle_address[2]~input_o ),
	.datae(!\init_address[2]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux13~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux13~0 .extended_lut = "off";
defparam \Mux13~0 .lut_mask = 64'h0123456701234567;
defparam \Mux13~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[3]~input (
	.i(decode_address[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[3]~input_o ));
// synopsys translate_off
defparam \decode_address[3]~input .bus_hold = "false";
defparam \decode_address[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[3]~input (
	.i(shuffle_address[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[3]~input_o ));
// synopsys translate_off
defparam \shuffle_address[3]~input .bus_hold = "false";
defparam \shuffle_address[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[3]~input (
	.i(init_address[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[3]~input_o ));
// synopsys translate_off
defparam \init_address[3]~input .bus_hold = "false";
defparam \init_address[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux12~0 (
// Equation(s):
// \Mux12~0_combout  = ( \init_address[3]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[3]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[3]~input_o )))) ) ) # ( !\init_address[3]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[3]~input_o ))) # (\source[0]~input_o  & (\decode_address[3]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[3]~input_o ),
	.datad(!\shuffle_address[3]~input_o ),
	.datae(!\init_address[3]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux12~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux12~0 .extended_lut = "off";
defparam \Mux12~0 .lut_mask = 64'h0123456701234567;
defparam \Mux12~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[4]~input (
	.i(decode_address[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[4]~input_o ));
// synopsys translate_off
defparam \decode_address[4]~input .bus_hold = "false";
defparam \decode_address[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[4]~input (
	.i(shuffle_address[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[4]~input_o ));
// synopsys translate_off
defparam \shuffle_address[4]~input .bus_hold = "false";
defparam \shuffle_address[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[4]~input (
	.i(init_address[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[4]~input_o ));
// synopsys translate_off
defparam \init_address[4]~input .bus_hold = "false";
defparam \init_address[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux11~0 (
// Equation(s):
// \Mux11~0_combout  = ( \init_address[4]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[4]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[4]~input_o )))) ) ) # ( !\init_address[4]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[4]~input_o ))) # (\source[0]~input_o  & (\decode_address[4]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[4]~input_o ),
	.datad(!\shuffle_address[4]~input_o ),
	.datae(!\init_address[4]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux11~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux11~0 .extended_lut = "off";
defparam \Mux11~0 .lut_mask = 64'h0123456701234567;
defparam \Mux11~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[5]~input (
	.i(decode_address[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[5]~input_o ));
// synopsys translate_off
defparam \decode_address[5]~input .bus_hold = "false";
defparam \decode_address[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[5]~input (
	.i(shuffle_address[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[5]~input_o ));
// synopsys translate_off
defparam \shuffle_address[5]~input .bus_hold = "false";
defparam \shuffle_address[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[5]~input (
	.i(init_address[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[5]~input_o ));
// synopsys translate_off
defparam \init_address[5]~input .bus_hold = "false";
defparam \init_address[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux10~0 (
// Equation(s):
// \Mux10~0_combout  = ( \init_address[5]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[5]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[5]~input_o )))) ) ) # ( !\init_address[5]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[5]~input_o ))) # (\source[0]~input_o  & (\decode_address[5]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[5]~input_o ),
	.datad(!\shuffle_address[5]~input_o ),
	.datae(!\init_address[5]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux10~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux10~0 .extended_lut = "off";
defparam \Mux10~0 .lut_mask = 64'h0123456701234567;
defparam \Mux10~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[6]~input (
	.i(decode_address[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[6]~input_o ));
// synopsys translate_off
defparam \decode_address[6]~input .bus_hold = "false";
defparam \decode_address[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[6]~input (
	.i(shuffle_address[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[6]~input_o ));
// synopsys translate_off
defparam \shuffle_address[6]~input .bus_hold = "false";
defparam \shuffle_address[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[6]~input (
	.i(init_address[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[6]~input_o ));
// synopsys translate_off
defparam \init_address[6]~input .bus_hold = "false";
defparam \init_address[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux9~0 (
// Equation(s):
// \Mux9~0_combout  = ( \init_address[6]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[6]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[6]~input_o )))) ) ) # ( !\init_address[6]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[6]~input_o ))) # (\source[0]~input_o  & (\decode_address[6]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[6]~input_o ),
	.datad(!\shuffle_address[6]~input_o ),
	.datae(!\init_address[6]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux9~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux9~0 .extended_lut = "off";
defparam \Mux9~0 .lut_mask = 64'h0123456701234567;
defparam \Mux9~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \decode_address[7]~input (
	.i(decode_address[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\decode_address[7]~input_o ));
// synopsys translate_off
defparam \decode_address[7]~input .bus_hold = "false";
defparam \decode_address[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_address[7]~input (
	.i(shuffle_address[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_address[7]~input_o ));
// synopsys translate_off
defparam \shuffle_address[7]~input .bus_hold = "false";
defparam \shuffle_address[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_address[7]~input (
	.i(init_address[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_address[7]~input_o ));
// synopsys translate_off
defparam \init_address[7]~input .bus_hold = "false";
defparam \init_address[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux8~0 (
// Equation(s):
// \Mux8~0_combout  = ( \init_address[7]~input_o  & ( (!\source[0]~input_o  & (\source[1]~input_o  & ((\shuffle_address[7]~input_o )))) # (\source[0]~input_o  & ((!\source[1]~input_o ) # ((\decode_address[7]~input_o )))) ) ) # ( !\init_address[7]~input_o  & 
// ( (\source[1]~input_o  & ((!\source[0]~input_o  & ((\shuffle_address[7]~input_o ))) # (\source[0]~input_o  & (\decode_address[7]~input_o )))) ) )

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\decode_address[7]~input_o ),
	.datad(!\shuffle_address[7]~input_o ),
	.datae(!\init_address[7]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux8~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux8~0 .extended_lut = "off";
defparam \Mux8~0 .lut_mask = 64'h0123456701234567;
defparam \Mux8~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[0]~input (
	.i(shuffle_data[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[0]~input_o ));
// synopsys translate_off
defparam \shuffle_data[0]~input .bus_hold = "false";
defparam \shuffle_data[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[0]~input (
	.i(init_data[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[0]~input_o ));
// synopsys translate_off
defparam \init_data[0]~input .bus_hold = "false";
defparam \init_data[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux7~0 (
// Equation(s):
// \Mux7~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[0]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[0]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[0]~input_o ),
	.datad(!\init_data[0]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux7~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux7~0 .extended_lut = "off";
defparam \Mux7~0 .lut_mask = 64'h0246024602460246;
defparam \Mux7~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[1]~input (
	.i(shuffle_data[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[1]~input_o ));
// synopsys translate_off
defparam \shuffle_data[1]~input .bus_hold = "false";
defparam \shuffle_data[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[1]~input (
	.i(init_data[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[1]~input_o ));
// synopsys translate_off
defparam \init_data[1]~input .bus_hold = "false";
defparam \init_data[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[1]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[1]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[1]~input_o ),
	.datad(!\init_data[1]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux6~0 .extended_lut = "off";
defparam \Mux6~0 .lut_mask = 64'h0246024602460246;
defparam \Mux6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[2]~input (
	.i(shuffle_data[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[2]~input_o ));
// synopsys translate_off
defparam \shuffle_data[2]~input .bus_hold = "false";
defparam \shuffle_data[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[2]~input (
	.i(init_data[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[2]~input_o ));
// synopsys translate_off
defparam \init_data[2]~input .bus_hold = "false";
defparam \init_data[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux5~0 (
// Equation(s):
// \Mux5~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[2]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[2]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[2]~input_o ),
	.datad(!\init_data[2]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux5~0 .extended_lut = "off";
defparam \Mux5~0 .lut_mask = 64'h0246024602460246;
defparam \Mux5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[3]~input (
	.i(shuffle_data[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[3]~input_o ));
// synopsys translate_off
defparam \shuffle_data[3]~input .bus_hold = "false";
defparam \shuffle_data[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[3]~input (
	.i(init_data[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[3]~input_o ));
// synopsys translate_off
defparam \init_data[3]~input .bus_hold = "false";
defparam \init_data[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[3]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[3]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[3]~input_o ),
	.datad(!\init_data[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~0 .extended_lut = "off";
defparam \Mux4~0 .lut_mask = 64'h0246024602460246;
defparam \Mux4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[4]~input (
	.i(shuffle_data[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[4]~input_o ));
// synopsys translate_off
defparam \shuffle_data[4]~input .bus_hold = "false";
defparam \shuffle_data[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[4]~input (
	.i(init_data[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[4]~input_o ));
// synopsys translate_off
defparam \init_data[4]~input .bus_hold = "false";
defparam \init_data[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[4]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[4]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[4]~input_o ),
	.datad(!\init_data[4]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~0 .extended_lut = "off";
defparam \Mux3~0 .lut_mask = 64'h0246024602460246;
defparam \Mux3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[5]~input (
	.i(shuffle_data[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[5]~input_o ));
// synopsys translate_off
defparam \shuffle_data[5]~input .bus_hold = "false";
defparam \shuffle_data[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[5]~input (
	.i(init_data[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[5]~input_o ));
// synopsys translate_off
defparam \init_data[5]~input .bus_hold = "false";
defparam \init_data[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[5]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[5]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[5]~input_o ),
	.datad(!\init_data[5]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~0 .extended_lut = "off";
defparam \Mux2~0 .lut_mask = 64'h0246024602460246;
defparam \Mux2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[6]~input (
	.i(shuffle_data[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[6]~input_o ));
// synopsys translate_off
defparam \shuffle_data[6]~input .bus_hold = "false";
defparam \shuffle_data[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[6]~input (
	.i(init_data[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[6]~input_o ));
// synopsys translate_off
defparam \init_data[6]~input .bus_hold = "false";
defparam \init_data[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[6]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[6]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[6]~input_o ),
	.datad(!\init_data[6]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~0 .extended_lut = "off";
defparam \Mux1~0 .lut_mask = 64'h0246024602460246;
defparam \Mux1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_data[7]~input (
	.i(shuffle_data[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_data[7]~input_o ));
// synopsys translate_off
defparam \shuffle_data[7]~input .bus_hold = "false";
defparam \shuffle_data[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \init_data[7]~input (
	.i(init_data[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\init_data[7]~input_o ));
// synopsys translate_off
defparam \init_data[7]~input .bus_hold = "false";
defparam \init_data[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (!\source[0]~input_o  & (\source[1]~input_o  & (\shuffle_data[7]~input_o ))) # (\source[0]~input_o  & (!\source[1]~input_o  & ((\init_data[7]~input_o ))))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_data[7]~input_o ),
	.datad(!\init_data[7]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux0~0 .extended_lut = "off";
defparam \Mux0~0 .lut_mask = 64'h0246024602460246;
defparam \Mux0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \shuffle_wren~input (
	.i(shuffle_wren),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\shuffle_wren~input_o ));
// synopsys translate_off
defparam \shuffle_wren~input .bus_hold = "false";
defparam \shuffle_wren~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux16~0 (
// Equation(s):
// \Mux16~0_combout  = (!\source[0]~input_o  & ((!\source[1]~input_o ) # (!\shuffle_wren~input_o ))) # (\source[0]~input_o  & (\source[1]~input_o ))

	.dataa(!\source[0]~input_o ),
	.datab(!\source[1]~input_o ),
	.datac(!\shuffle_wren~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux16~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux16~0 .extended_lut = "off";
defparam \Mux16~0 .lut_mask = 64'hB9B9B9B9B9B9B9B9;
defparam \Mux16~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \s_q[0]~input (
	.i(s_q[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[0]~input_o ));
// synopsys translate_off
defparam \s_q[0]~input .bus_hold = "false";
defparam \s_q[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[1]~input (
	.i(s_q[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[1]~input_o ));
// synopsys translate_off
defparam \s_q[1]~input .bus_hold = "false";
defparam \s_q[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[2]~input (
	.i(s_q[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[2]~input_o ));
// synopsys translate_off
defparam \s_q[2]~input .bus_hold = "false";
defparam \s_q[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[3]~input (
	.i(s_q[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[3]~input_o ));
// synopsys translate_off
defparam \s_q[3]~input .bus_hold = "false";
defparam \s_q[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[4]~input (
	.i(s_q[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[4]~input_o ));
// synopsys translate_off
defparam \s_q[4]~input .bus_hold = "false";
defparam \s_q[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[5]~input (
	.i(s_q[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[5]~input_o ));
// synopsys translate_off
defparam \s_q[5]~input .bus_hold = "false";
defparam \s_q[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[6]~input (
	.i(s_q[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[6]~input_o ));
// synopsys translate_off
defparam \s_q[6]~input .bus_hold = "false";
defparam \s_q[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \s_q[7]~input (
	.i(s_q[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s_q[7]~input_o ));
// synopsys translate_off
defparam \s_q[7]~input .bus_hold = "false";
defparam \s_q[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

assign s_address[0] = \s_address[0]~output_o ;

assign s_address[1] = \s_address[1]~output_o ;

assign s_address[2] = \s_address[2]~output_o ;

assign s_address[3] = \s_address[3]~output_o ;

assign s_address[4] = \s_address[4]~output_o ;

assign s_address[5] = \s_address[5]~output_o ;

assign s_address[6] = \s_address[6]~output_o ;

assign s_address[7] = \s_address[7]~output_o ;

assign s_data[0] = \s_data[0]~output_o ;

assign s_data[1] = \s_data[1]~output_o ;

assign s_data[2] = \s_data[2]~output_o ;

assign s_data[3] = \s_data[3]~output_o ;

assign s_data[4] = \s_data[4]~output_o ;

assign s_data[5] = \s_data[5]~output_o ;

assign s_data[6] = \s_data[6]~output_o ;

assign s_data[7] = \s_data[7]~output_o ;

assign s_wren = \s_wren~output_o ;

assign shuffle_q[0] = \shuffle_q[0]~output_o ;

assign shuffle_q[1] = \shuffle_q[1]~output_o ;

assign shuffle_q[2] = \shuffle_q[2]~output_o ;

assign shuffle_q[3] = \shuffle_q[3]~output_o ;

assign shuffle_q[4] = \shuffle_q[4]~output_o ;

assign shuffle_q[5] = \shuffle_q[5]~output_o ;

assign shuffle_q[6] = \shuffle_q[6]~output_o ;

assign shuffle_q[7] = \shuffle_q[7]~output_o ;

assign decode_q[0] = \decode_q[0]~output_o ;

assign decode_q[1] = \decode_q[1]~output_o ;

assign decode_q[2] = \decode_q[2]~output_o ;

assign decode_q[3] = \decode_q[3]~output_o ;

assign decode_q[4] = \decode_q[4]~output_o ;

assign decode_q[5] = \decode_q[5]~output_o ;

assign decode_q[6] = \decode_q[6]~output_o ;

assign decode_q[7] = \decode_q[7]~output_o ;

endmodule
